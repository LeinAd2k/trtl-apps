{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "TRTL apps",
    "description" : "This is the API for apps to interact with the TRTL apps service.  You can find out more about TRTL apps at [http://trtlapps.io](http://trtlapps.io).",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://trtlapps.io/api"
  } ],
  "tags" : [ {
    "name" : "app",
    "description" : "Turtle App functions - requires auth token",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://trtlapps.io"
    }
  } ],
  "paths" : {
    "/{appId}/accounts" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Creates a new account",
        "description" : "Returns the newly created account object",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "ID of the app creating the account",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                },
                "example" : {
                  "id" : "8RgwiWmgiYKQlUHWGaTW",
                  "appId" : "84U0IRP0rdC57AHfwRQc",
                  "balanceLocked" : 0,
                  "balanceUnlocked" : 0,
                  "createdAt" : 1568917025296,
                  "deleted" : false,
                  "paymentId" : "6a8db2c83a34f29275d3cfad7100944168c46fd5d43e074aa038e18a0410c7dd",
                  "depositAddress" : "TRTLuxsFnkbHRdfoKCFc8KJ6Rzvp1TdqLHdJctadbENjAZx5mhgXqQXA6kNfcuNnap94kdBUwnfvPHvh82YufKFmHbXLoKCzfHLXTXbsQxzqy5KHyHXTQZbtEHnAsorKPqkweHzDRcRyM28g6jJMQjBoocYqsjtR3G5n1ipuDpn6VbqZQWnQ1D22qvB",
                  "depositQrCode" : "https://chart.googleapis.com/chart?cht=qr&chs=256x256&chl=turtlecoin://TRTLuxsFnkbHRdfoKCFc8KJ6Rzvp1TdqLHdJctadbENjAZx5mhgXqQXA6kNfcuNnap94kdBUwnfvPHvh82YufKFmHbXLoKCzfHLXTXbsQxzqy5KHyHXTQZbtEHnAsorKPqkweHzDRcRyM28g6jJMQjBoocYqsjtR3G5n1ipuDpn6VbqZQWnQ1D22qvB"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/accounts/{accountId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Gets the Account with the given id",
        "description" : "Returns an Account object",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The ID of the account to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                },
                "example" : {
                  "id" : "8RgwiWmgiYKQlUHWGaTW",
                  "appId" : "84U0IRP0rdC57AHfwRQc",
                  "balanceLocked" : 0,
                  "balanceUnlocked" : 0,
                  "createdAt" : 1568917025296,
                  "deleted" : false,
                  "paymentId" : "6a8db2c83a34f29275d3cfad7100944168c46fd5d43e074aa038e18a0410c7dd",
                  "depositAddress" : "TRTLuxsFnkbHRdfoKCFc8KJ6Rzvp1TdqLHdJctadbENjAZx5mhgXqQXA6kNfcuNnap94kdBUwnfvPHvh82YufKFmHbXLoKCzfHLXTXbsQxzqy5KHyHXTQZbtEHnAsorKPqkweHzDRcRyM28g6jJMQjBoocYqsjtR3G5n1ipuDpn6VbqZQWnQ1D22qvB",
                  "depositQrCode" : "https://chart.googleapis.com/chart?cht=qr&chs=256x256&chl=turtlecoin://TRTLuxsFnkbHRdfoKCFc8KJ6Rzvp1TdqLHdJctadbENjAZx5mhgXqQXA6kNfcuNnap94kdBUwnfvPHvh82YufKFmHbXLoKCzfHLXTXbsQxzqy5KHyHXTQZbtEHnAsorKPqkweHzDRcRyM28g6jJMQjBoocYqsjtR3G5n1ipuDpn6VbqZQWnQ1D22qvB"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/service/nodefee" : {
      "get" : {
        "tags" : [ "service" ],
        "summary" : "Gets the node fee",
        "description" : "Returns the current node fee charged on account withdrawals.",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "fee" : {
                      "type" : "integer",
                      "description" : "The current node fee."
                    }
                  }
                },
                "example" : {
                  "fee" : 10
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/service/validateaddress" : {
      "get" : {
        "tags" : [ "service" ],
        "summary" : "Check address validity",
        "description" : "Checks if the supplied address is valid.",
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "description" : "The address you want to validate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowIntegrated",
          "in" : "query",
          "description" : "Should integrated address be included as valid.",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "isValid" : {
                      "type" : "boolean"
                    }
                  }
                },
                "example" : {
                  "isValid" : true
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/accounts/{accountId}/withdrawaddress" : {
      "put" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Set an account's withdraw address",
        "description" : "Set the account withdraw address. Note that integrated addresses are not allowed. Returns the newly set address if the operation succeeded.",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of the account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "address" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "address" : {
                      "type" : "string"
                    }
                  }
                },
                "example" : {
                  "address" : "TRTLv3wHDVyjcHXV2fHQ3cfSjjpCck9YjEEAw4jaAfn3Djrrz63bPCtWJNPW3CJhbg2BmnNidHMEo29geJc9QmXKNroz8NgLUc7"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/deposits/{depositId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Gets the deposit with the given ID",
        "description" : "Returns a Deposit object",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "depositId",
          "in" : "path",
          "description" : "The ID of the deposit to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deposit"
                },
                "example" : {
                  "id" : "Ehr3Zzfkvc01Ir3n0nMN",
                  "appId" : "J3irXkH26gE4pZHYyWWW",
                  "accountId" : "8RgwiWmgiYKQlUHWGaTW",
                  "paymentId" : "fa8ecc78c8d3a56895a102d30b0dea629bb75075b57869fb0395b56f48a2ae21",
                  "depositAddress" : "TRTLv3wHDVyjcHXV2fHQ3cfSjjpCck9YjEEAw4jaAfn3Djrrz63bPCtWJNPW3CJhbg2BmnNidHMEo29geJc9QmXKNroz8NgLUc7",
                  "integratedAddress" : "TRTLuz6RCHAHdBfSy6kBC6HG3CpR9PpZe94a3bGdZuzBHxWc1GGniGv9tzdJ7JpvV5A53V8GoBCTvHRjsvQqwgRwHHrfsxfrDoVjcHXV2fHQ3cfSjjpCck9YjEEAw4jaAfn3Djrrz63bPCtWJNPW3CJhbg2BmnNidHMEo29geJc9QmXKNroz8JtDGhG",
                  "amount" : 4200,
                  "txHash" : "6450ebe98e9387eab370d8394ab31b9a30822bd43c97737225ff8e0193abb6c8",
                  "createdDate" : 1573251262062,
                  "blockHeight" : 2086619,
                  "status" : "completed",
                  "accountCredited" : true,
                  "cancelled" : false,
                  "lastUpdate" : 1573251954262
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/transfers" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Transfer funds from the sender to 1 or more receivers",
        "description" : "Transfers funds from the sender to the array of recipients. Returns a Transfer object if the operation succeeded.",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "senderId" : {
                    "type" : "string",
                    "example" : "hUMUXEFN9amjQjXN9Km7",
                    "description" : "ID of the account sending the funds"
                  },
                  "recipients" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Recipient"
                    },
                    "example" : [ {
                      "accountId" : "DawR7cEvQjEWMBVmMkkn",
                      "amount" : 300
                    }, {
                      "accountId" : "rwszORa1qaSXK0RbZ7F5",
                      "amount" : 200
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Transfer"
                },
                "example" : {
                  "transferId" : "apHo3ySWJAZy6KwH704C",
                  "appId" : "tX0vd7xGAE9aUrKF6oel",
                  "senderId" : "hUMUXEFN9amjQjXN9Km7",
                  "recipients" : [ {
                    "accountId" : "DawR7cEvQjEWMBVmMkkn",
                    "amount" : 300
                  }, {
                    "accountId" : "rwszORa1qaSXK0RbZ7F5",
                    "amount" : 200
                  } ],
                  "timestamp" : 1575137353275
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/transfers/{transferId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Gets the transfer with the given transfer ID",
        "description" : "Returns a Transfer object",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transferId",
          "in" : "path",
          "description" : "The ID of the transfer to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Transfer"
                },
                "example" : {
                  "id" : "apHo3ySWJAZy6KwH704C",
                  "appId" : "tX0vd7xGAE9aUrKF6oel",
                  "senderId" : "hUMUXEFN9amjQjXN9Km7",
                  "recipients" : [ {
                    "accountId" : "DawR7cEvQjEWMBVmMkkn",
                    "amount" : 300
                  }, {
                    "accountId" : "rwszORa1qaSXK0RbZ7F5",
                    "amount" : 200
                  } ],
                  "timestamp" : 1575137353275
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/withdrawals" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Withdraw account funds",
        "description" : "Withdraws the given amount from the account's balance to their withdraw address, or alternatively to the optional sendAddress specified in the request body. Returns the Withdrawal object if the operation succeeded.",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "accountId" : {
                    "type" : "string",
                    "example" : "8RgwiWmgiYKQlUHWGaTW",
                    "description" : "ID of the account making the withdrawal"
                  },
                  "amount" : {
                    "type" : "integer",
                    "description" : "Amount in atomic units",
                    "example" : 420
                  },
                  "sendAddress" : {
                    "type" : "string",
                    "description" : "Optional address where the funds will be sent. If none is provided, the account withdrawAddress will be used.",
                    "example" : "TRTLv32bGBP2cfM3SdijU4TTYnCPoR33g5eTas6n9HamBvu8ozc9BZHWza5j7cmBFSgh4dmmGRongfoEEzcvuAEF8dLxixsS7he"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Withdrawal"
                },
                "example" : {
                  "id" : "btpNERIyBgmg3gPFE5OA",
                  "paymentId" : "304044f69ca418575661375f0bc90b829f1fd12c2c181454d6dcabdcb81b683f",
                  "status" : "confirming",
                  "blockHeight" : 0,
                  "appId" : "J3irXkH26gE4pZHYyWWW",
                  "account" : "8RgwiWmgiYKQlUHWGaTW",
                  "amount" : 200,
                  "fee" : 10,
                  "address" : "TRTLv32bGBP2cfM3SdijU4TTYnCPoR33g5eTas6n9HamBvu8ozc9BZHWza5j7cmBFSgh4dmmGRongfoEEzcvuAEF8dLxixsS7he",
                  "requestAtBlock" : 2015846,
                  "timestamp" : 1573675761789,
                  "lastUpdate" : 1573675761789,
                  "failed" : false
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/{appId}/withdrawals/{withdrawalId}" : {
      "get" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "app" ],
        "summary" : "Gets the withdrawal with the given ID",
        "description" : "Returns a Withdrawal object",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Your app ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withdrawalId",
          "in" : "path",
          "description" : "The ID of the withdrawal to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Withdrawal"
                },
                "example" : {
                  "id" : "btpNERIyBgmg3gPFE5OA",
                  "paymentId" : "304044f69ca418575661375f0bc90b829f1fd12c2c181454d6dcabdcb81b683f",
                  "status" : "confirming",
                  "blockHeight" : 0,
                  "appId" : "J3irXkH26gE4pZHYyWWW",
                  "accountId" : "8RgwiWmgiYKQlUHWGaTW",
                  "amount" : 200,
                  "fee" : 10,
                  "address" : "TRTLv32bGBP2cfM3SdijU4TTYnCPoR33g5eTas6n9HamBvu8ozc9BZHWza5j7cmBFSgh4dmmGRongfoEEzcvuAEF8dLxixsS7he",
                  "requestAtBlock" : 2015846,
                  "timestamp" : 1573675761789,
                  "lastUpdate" : 1573675761789,
                  "failed" : false
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Access token is missing or invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "BadRequest" : {
        "description" : "Bad request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ServiceError"
            }
          }
        }
      }
    },
    "schemas" : {
      "Account" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "paymentId" : {
            "type" : "string"
          },
          "depositAddress" : {
            "type" : "string"
          },
          "depositQrCode" : {
            "type" : "string"
          },
          "withdrawAddress" : {
            "type" : "string"
          },
          "balanceUnlocked" : {
            "type" : "integer"
          },
          "balanceLocked" : {
            "type" : "integer"
          },
          "createdAt" : {
            "type" : "integer"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "Deposit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "blockHeight" : {
            "type" : "integer"
          },
          "amount" : {
            "type" : "integer"
          },
          "depositAddress" : {
            "type" : "string"
          },
          "paymentId" : {
            "type" : "string"
          },
          "integratedAddress" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "txHash" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "integer"
          },
          "accountCredited" : {
            "type" : "boolean"
          },
          "lastUpdate" : {
            "type" : "integer"
          },
          "cancelled" : {
            "type" : "boolean"
          }
        }
      },
      "Transfer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "senderId" : {
            "type" : "string"
          },
          "recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Recipient"
            }
          },
          "timestamp" : {
            "type" : "integer"
          }
        }
      },
      "Recipient" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer"
          }
        }
      },
      "Withdrawal" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "paymentId" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer"
          },
          "fee" : {
            "type" : "integer"
          },
          "address" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer"
          },
          "lastUpdate" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "string"
          },
          "requestedAtBlock" : {
            "type" : "integer"
          },
          "blockHeight" : {
            "type" : "integer"
          },
          "failed" : {
            "type" : "boolean"
          },
          "txHash" : {
            "type" : "string"
          }
        }
      },
      "ServiceError" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}
